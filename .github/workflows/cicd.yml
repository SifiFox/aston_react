name: on Pull Request
run-name: ${{ github.actor }} on Pull Request
#Allow repo secrets
env:
  VITE_API_KEY: ${{ secrets.VITE_API_KEY }}
  VITE_API_TYPE: ${{ secrets.VITE_API_TYPE }}
  VITE_APP_ID: ${{ secrets.VITE_APP_ID }}
  VITE_AUTH_DOMAIN: ${{ secrets.VITE_AUTH_DOMAIN }}
  VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
  VITE_MEASUREMENT_ID: ${{ secrets.VITE_MEASUREMENT_ID }}
  VITE_MESSAGING_SENDER_ID: ${{ secrets.VITE_MESSAGING_SENDER_ID }}
  VITE_PROJECT_ID: ${{ secrets.VITE_PROJECT_ID }}
  VITE_STORAGE_BUCKET: ${{ secrets.VITE_STORAGE_BUCKET }}
on: 
  pull_request:
    branches:
      - main
  workflow_dispatch:
  
jobs:
  eslint:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: './my-app'
    steps:
      - name: get repository code
        uses: actions/checkout@v4
      - name: installing node
        uses: actions/setup-node@v4
        with: 
          node-version: 'latest'
      - name: cache deps
        uses: actions/cache@v4
        with:
          path: ~/.yarn
          key: node_modules-${{ hashFiles('**/yarn.lock')}}
      - name: install dependencies
        run: yarn ci
      - name: lint app
        run: yarn run lint
  prettier:
    runs-on: ubuntu-latest
    needs: eslint
    defaults:
      run:
        working-directory: './my-app'
    steps:
      - name: get repository code
        uses: actions/checkout@v4
      - name: cache deps
        uses: actions/cache@v4
        with:
          path: ~/.yarn
          key: node_modules-${{ hashFiles('**/yarn.lock')}}
      - name: install dependencies
        run: yarn ci
      - name: code formatting
        run: yarn run format
  deployment:
    runs-on: ubuntu-latest
    needs: [eslint, prettier]
    defaults:
      run:
        working-directory: './my-app'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build
        run: yarn ci && yarn run build
